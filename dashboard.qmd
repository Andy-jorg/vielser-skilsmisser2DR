---
title: "Vielser og Skilsmisser DK"
format: 
  dashboard: 
    orientation: columns
    logo: "images/logo.png"
---

```{r}
# Load prerequisites
pacman::p_load(
  "dplyr",
  "janitor",
  "ggplot2",
 # "dkstat",
  "stringr",
 # "epinionR",
  "forcats",
  #"tidytext",
  "leaflet",
  "sf",
  #"osmdata",
  "tidyr",
  #"crosstalk",
  "htmltools",
  "scales",
  #"streamgraph",
  "plotly",
  "renv"
)
```

```{r}
data_year <- readRDS("01_data_cleaning/03_output/vielser_skilsmisser_year.rds")

# Get average vielser and skilsmisser per year
means <- data_year |> 
  group_by(action) |> 
  summarise(mean_value = round(mean(value, na.rm = TRUE)))


mean_vielser <- means |> 
  filter(action == "Vielser") |> 
  pull(mean_value)


mean_skils <- means |> 
  filter(action == "Skilsmisser") |> 
  pull(mean_value)


```

```{r}
# Over tid
data_year <- readRDS("01_data_cleaning/03_output/vielser_skilsmisser_year.rds") |> 
  mutate(value = round(value, 1))

```

```{r, warnings = FALSE}
# vielser_skils_over_tid <- data_year |> 
#   ggplot(aes(x = year, y = value, group = action, color = action)) + 
#   geom_line() + 
#   geom_point() + 
#   scale_color_manual(values = c("#90918F", "#eb7974")) +
#   scale_x_continuous(breaks=seq(1980, 2023, 5)) +
#   xlab("") + 
#   ylab("Antal") +
#   theme_classic() +
#   theme(legend.position = "bottom",
#         legend.title = element_blank()) 

# forskel_over_tid <- data_year |>
#   ggplot(aes(x = year, y = change_year, group = action, color = action)) +
#   geom_line() +
#   geom_point() +
#   scale_color_manual(values = c("#90918F", "#eb7974")) +
#   scale_x_continuous(breaks=seq(1980, 2023, 5)) +
#   scale_y_continuous(labels = scales::percent) +
#   xlab("") +
#   ylab("% forskel (år)") +
#   theme_classic() +
#   theme(legend.position = "bottom",
#         legend.title = element_blank())
```

```{r}
vielser_skils_over_tid  <- plot_ly(data = data_year, 
               x = ~year, 
               y = ~value, 
               type = 'scatter', 
               mode = 'lines+markers', 
               color = ~action, 
               colors = c("#90918F", "#eb7974"))

vielser_skils_over_tid  <- vielser_skils_over_tid  |> 
  layout(
    xaxis = list(
      title = "",
      tickvals = seq(1980, 2023, 5),
      showgrid = FALSE
    ),
    yaxis = list(
      title = "Antal",
      showgrid = FALSE
    ),
    legend = list(
      orientation = "h",
      x = 0.5,
      xanchor = "center",
      y = -0.2
    ),
    showlegend = TRUE,
    plot_bgcolor = 'white',
    paper_bgcolor = 'white',
    annotations = list(
      list(
        x = 2011,
        y = max(data_year$value[data_year$year == 2011]),
        xref = 'x',
        yref = 'y',
        text = "Fra 2008 til 2011 faldt antal vielser med 28 pct. point",
        showarrow = TRUE,
        arrowhead = 2,
        ax = -100,
        ay = 40
      )
    )
  )

```

```{r}
forskel_over_tid <- plot_ly(
  data = data_year, 
  x = ~year, 
  y = ~change_year, 
  type = 'scatter', 
  mode = 'lines+markers', 
  color = ~action, 
  colors = c("#90918F", "#eb7974")
)

forskel_over_tid <- forskel_over_tid |> 
  layout(
    xaxis = list(
      title = "",
      tickvals = seq(1980, 2023, 5),
      showgrid = FALSE
    ),
    yaxis = list(
      title = "% forskel (år)",
      tickformat = ".0%",
      showgrid = FALSE
    ),
    legend = list(
      orientation = "h",
      x = 0.5,
      xanchor = "center",
      y = -0.2
    ),
    showlegend = TRUE,
    plot_bgcolor = 'white',
    paper_bgcolor = 'white',
    annotations = list(
      list(
        x = 2020,
        y = max(data_year$change_year[data_year$year == 2020]),
        xref = 'x',
        yref = 'y',
        text = "Fra 2019 til 2020 var der en stigning i antal skilsmisser på 49 pct. point",
        showarrow = TRUE,
        arrowhead = 2,
        ax = -50,
        ay = -50
      )
    )
  )
```

```{r}
# Civilstand over tid
civilstand <- readRDS("01_data_cleaning/03_output/civilstand_year.rds")

civilstand_over_tid <- civilstand |> 
  ggplot(aes(x = year, y = value, group = civilstand, color = civilstand)) + 
  geom_line() + 
  geom_point()
```

```{r}
kommuner <- readRDS("01_data_cleaning/03_output/kommuner_to_map.rds")

data_map <- st_transform(kommuner, crs = '+proj=longlat +datum=WGS84')

data_map <- st_simplify(data_map, dTolerance = 75)


pal_borg_val <- colorNumeric(
  palette = c("#a6a7a5", "#90918f", "#737472", "#818280", "#565755","#484847"),
  domain = data_map$value_borgerlig)

pal_borg_andel <- colorNumeric(
  palette = c("#a6a7a5", "#90918f", "#737472", "#818280", "#565755","#484847"),
  domain = data_map$andel_borgerlig)

pal_kirk_val <- colorNumeric(
  palette = c("#f39539", "#f28820", "#f17b08", "#d86e07", "#c06206", "#a85605"),
  domain = data_map$value_kirkelig)

pal_kirk_andel <- colorNumeric(
  palette = c("#f39539", "#f28820", "#f17b08", "#d86e07", "#c06206", "#a85605"),
  domain = data_map$andel_kirkelig)

pal_total<- colorNumeric(
  palette = c("#ef9793", "#eb7974", "#e96b65", "#d1605a", "#ba5550", "#a34a46"),
  domain = data_map$value_total)

map <- leaflet(data_map) |>
  #addTiles() |>
  addProviderTiles("CartoDB.Positron") |>
  addPolygons(data = data_map,
              fillOpacity = 1,
              fillColor = ~pal_total(value_total),
              weight = 1,
              color = "gray",
              dashArray = "3",
              label = ~label_value_total,
              labelOptions = labelOptions(
                textsize = "15px",
                direction = "auto"),
              group = "Total (Kirkelig + Borgerlig)",
              highlightOptions = highlightOptions(
                weight = 4,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) |>
  addPolygons(data = data_map,
              fillOpacity = 1,
              fillColor = ~pal_borg_val(value_borgerlig),
              weight = 1,
              color = "gray",
              dashArray = "3",
              label = ~label_value_borgerlig,
              labelOptions = labelOptions(
                textsize = "15px",
                direction = "auto"),
              group = "Borgerlig (Antal)",
              highlightOptions = highlightOptions(
                weight = 4,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) |>
  addPolygons(data = data_map,
              fillOpacity = 1,
              fillColor = ~pal_borg_andel(andel_borgerlig),
              weight = 1,
              color = "gray",
              dashArray = "3",
              label = ~label_andel_borgerlig,
              labelOptions = labelOptions(
                textsize = "15px",
                direction = "auto"),
              group = "Borgerlig (Andel)",
              highlightOptions = highlightOptions(
                weight = 4,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) |>
  addPolygons(data = data_map,
              fillOpacity = 1,
              fillColor = ~pal_kirk_val(value_kirkelig),
              weight = 1,
              color = "gray",
              dashArray = "3",
              label = ~label_value_kirkelig,
              labelOptions = labelOptions(
                textsize = "15px",
                direction = "auto"),
              group = "Kirkelig (Antal)",
              highlightOptions = highlightOptions(
                weight = 4,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) |>
  addPolygons(data = data_map,
              fillOpacity = 1,
              fillColor = ~pal_kirk_andel(andel_kirkelig),
              weight = 1,
              color = "gray",
              dashArray = "3",
              label = ~label_andel_kirkelig,
              labelOptions = labelOptions(
                textsize = "15px",
                direction = "auto"),
              group = "Kirkelig (Andel)",
              highlightOptions = highlightOptions(
                weight = 4,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) |>
  addLayersControl(
    baseGroups=c("Total (Kirkelig + Borgerlig)",
                 "Borgerlig (Antal)",
                 "Borgerlig (Andel)",
                 "Kirkelig (Antal)",
                 "Kirkelig (Andel)"),
    position = "bottomleft",
    options = layersControlOptions(collapsed = FALSE)
  )
```

```{r}
age_viede <- readRDS("01_data_cleaning/03_output/age_viede.rds")

```

```{r}
# age_viede_plot <- age_viede |> 
#   mutate(ALDER = str_replace_all(ALDER, "Gennemsnitsalder for ", ""),
#          ALDER = str_replace_all(ALDER, "1\\. gangsviede", "Førstegangsviede"),
#          ALDER = stringr::str_to_title(ALDER)) |> 
#   ggplot(aes(x = year, y = alder_gns, group = ALDER, color = ALDER)) + 
#   geom_line() + 
#   scale_color_manual(values = c("#eb7974", "#90918F", "#8b403c", "#393a39")) +
#   scale_x_continuous(breaks=seq(1900, 2025, 25)) +
#   xlab("") + 
#   ylab("Alder") +
#   theme_classic() +
#   theme(legend.title = element_blank()) 
```

```{r}
# Use plotly instead
age_viede_mutated <- age_viede |> 
  mutate(ALDER = str_replace_all(ALDER, "Gennemsnitsalder for ", ""),
         ALDER = str_replace_all(ALDER, "1\\. gangsviede", "Førstegangsviede"),
         ALDER = stringr::str_to_title(ALDER))

age_viede_plot <- plot_ly(data = age_viede_mutated, 
                          x = ~year, 
                          y = ~alder_gns, 
                          type = 'scatter', 
                          mode = 'lines', 
                          color = ~ALDER, 
                          colors = c("#eb7974", "#90918F", "#8b403c", "#393a39"))

age_viede_plot <- age_viede_plot |> 
  layout(
    xaxis = list(
      title = "",
      tickvals = seq(1900, 2025, 25),
      showgrid = FALSE
    ),
    yaxis = list(
      title = "Alder",
      showgrid = FALSE
    ),
        legend = list(
      orientation = "h",
      x = 0.5,
      xanchor = "center",
      y = -0.2,
      title = list(text = "")
    ),
    showlegend = TRUE,
    plot_bgcolor = 'rgba(0,0,0,0)',
    paper_bgcolor = 'rgba(0,0,0,0)'
  )
```

```{r, include = FALSE, eval = FALSE}
# Try with streamgraph
# streamgraph(age_viede, key="ALDER", value="alder_gns", date="year", height="300px", width="1000px")
```

```{r}
# Nøgletal:
age_key_measures <- age_viede |> 
  mutate(ALDER = str_replace_all(ALDER, "Gennemsnitsalder for ", ""),
         ALDER = str_replace_all(ALDER, "1\\. gangsviede", "Førstegangsviede"),
         ALDER = stringr::str_to_title(ALDER)) |> 
  group_by(ALDER) |> 
  mutate(highest = if_else(alder_gns == max(alder_gns), 1, 0),
         lowest = if_else(alder_gns == min(alder_gns), 1, 0)) |> 
  filter(highest == 1 | lowest == 1) |> 
  ungroup() |> 
  arrange(ALDER) |> 
  distinct(ALDER, alder_gns, .keep_all = TRUE) |> 
  select(-c(highest, lowest)) |> 
  rename(Gruppe = ALDER,
         År = year, 
         Gennemsnitsalder = alder_gns)
```

```{r}
vielsesdag <- readRDS("01_data_cleaning/03_output/vielsesdag.rds")
```

```{r, warning=F}
vielsesdag_year_month_day <- vielsesdag |> 
  group_by(year, month, day) |> 
  summarise(vielser = sum(value, na.rm = TRUE)) |> 
  ungroup()

vielsesdag_year_month <- vielsesdag |> 
  group_by(year, month) |> 
  summarise(vielser = sum(value, na.rm = TRUE))|> 
  ungroup() |> 
  mutate(month_num = case_when(
    month == "Januar" ~ 1, 
    month == "Februar" ~ 2, 
    month == "Marts" ~ 3, 
    month == "April" ~ 4, 
    month == "Maj" ~ 5, 
    month == "Juni" ~ 6, 
    month == "Juli" ~ 7, 
    month == "August" ~ 8, 
    month == "September" ~ 9, 
    month == "Oktober" ~ 10, 
    month == "November" ~ 11, 
    month == "December" ~ 12, 
  ))


vielsesdag_month_day <- vielsesdag |> 
  group_by(month, day) |> 
  summarise(vielser = mean(value, na.rm = TRUE))|> 
  ungroup() |> 
  mutate(
    day_month = paste0(day, ". ", month),
    day_month = forcats::as_factor(day_month),
    day_month = fct_reorder(day_month, vielser, na.rm = TRUE))

vielsesdag_month <- vielsesdag |> 
  group_by(month) |> 
  summarise(vielser = mean(value, na.rm = TRUE))|> 
  ungroup() |> 
  mutate(month_num = case_when(
    month == "Januar" ~ 1, 
    month == "Februar" ~ 2, 
    month == "Marts" ~ 3, 
    month == "April" ~ 4, 
    month == "Maj" ~ 5, 
    month == "Juni" ~ 6, 
    month == "Juli" ~ 7, 
    month == "August" ~ 8, 
    month == "September" ~ 9, 
    month == "Oktober" ~ 10, 
    month == "November" ~ 11, 
    month == "December" ~ 12, 
  ))

vielsesdag_day <- vielsesdag |> 
  group_by(day) |> 
  summarise(vielser = mean(value, na.rm = TRUE))|> 
  ungroup()
```

```{r}
# Days/years/months

# Plot of months
month_plot <- vielsesdag_month |> 
  mutate(month = forcats::as_factor(month),
         month = fct_reorder(month, month_num),
         color_grp = "grp") |> # change month_num to value to restructure
  ggplot(aes(x = month, y = vielser)) +
  geom_col(fill = "#eb7974") + 
 # scale_color_manual(values = c("#eb7974")) +
  xlab("") + 
  ylab("Antal Vielser (Gennemsnit)") +
  theme_classic() +
  theme(legend.title = element_blank()) +
  geom_text(aes(y = round(vielser), label = format(
    round(vielser), color = color_grp), vjust = 1.3)) +
  scale_color_manual(values = "white") + 
  guides(color = FALSE)
  #coord_flip()
  
# PLot of months (by year)
year_month <- vielsesdag_year_month |> 
  mutate(month = case_when(
    month == "Januar" ~ "J", 
    month == "Februar" ~ "F", 
    month == "Marts" ~ "Mar", 
    month == "April" ~ "Apr", 
    month == "Maj" ~ "Maj", 
    month == "Juni" ~ "Jun", 
    month == "Juli" ~ "Jul", 
    month == "August" ~ "A", 
    month == "September" ~ "S", 
    month == "Oktober" ~ "O", 
    month == "November" ~ "N", 
    month == "December" ~ "D")) |> 
  mutate(month = forcats::as_factor(month),
         month = fct_reorder(month, month_num)) |> 
  ggplot(aes(x = month, y = vielser)) +
  geom_col() + 
   scale_x_discrete(breaks = c("J", "Apr", "Jul", "O"), labels = c("Jan", "Apr", "Jul", "Oct")) +
  facet_wrap(vars(year)) + 
  geom_col(fill = "#eb7974") + 
 # scale_color_manual(values = c("#eb7974")) +
  xlab("") + 
  ylab("Antal Vielser") +
  theme_classic() +
  theme(legend.title = element_blank())
  # theme(axis.title.x=element_blank(),
  #       axis.text.x=element_blank(),
  #       axis.ticks.x=element_blank())
 # geom_text(aes(label = round(vielser), vjust = 1.3))

# Most popular day months
most_pop_day_month <- vielsesdag_month_day |> 
  arrange(desc(vielser)) |> 
  slice_head(n = 20) |> 
  ggplot(aes(x = day_month, y = vielser)) +
  geom_col() + 
  coord_flip() +
  geom_col(fill = "#eb7974") + 
 # scale_color_manual(values = c("#eb7974")) +
  xlab("") + 
  ylab("Antal Vielser (Gennemsnit)") +
  theme_classic() +
  theme(legend.title = element_blank()) +
  geom_text(aes(label = round(vielser), hjust = 1.3))

# Least popular day months
least_pop_day_month <- vielsesdag_month_day |> 
  arrange(vielser) |> 
  slice_head(n = 20) |> 
  mutate(day_month = forcats::as_factor(day_month),
         day_month = fct_reorder(day_month, rev(as.numeric(vielser)))) |> 
  ggplot(aes(x = day_month, y = vielser)) +
  geom_col() + 
  coord_flip() +
  geom_col(fill = "#eb7974") + 
 # scale_color_manual(values = c("#eb7974")) +
  xlab("") + 
  ylab("Antal Vielser (Gennemsnit)") +
  theme_classic() +
  theme(legend.title = element_blank()) +
  geom_text(aes(label = round(vielser), hjust = 1.3))
```

```{r}
vielsestype <- readRDS("01_data_cleaning/03_output/vielsestype.rds")
```

```{r}
# vielsestype_plot <- vielsestype |> 
#   ggplot(aes(x = year, y = value, group = TYPE, color = TYPE)) + 
#   geom_line() +
#    scale_color_manual(values = c("#90918F", "#eb7974")) +
#   scale_x_continuous(breaks=seq(1990, 2023, 5)) +
#   scale_y_continuous(labels = scales::percent) +
#   xlab("") + 
#   ylab("% forskel (år)") +
#   theme_classic() +
#   theme(legend.position = "bottom",
#         legend.title = element_blank()) 
```

```{r}
vielsestype_plot <- plot_ly(data = vielsestype, 
               x = ~year, 
               y = ~value, 
               type = 'scatter', 
               mode = 'lines', 
               color = ~TYPE, 
               colors = c("#eb7974", "#90918F"))

vielsestype_plot <- vielsestype_plot |> 
  layout(
    xaxis = list(
      title = "",
      tickvals = seq(1990, 2023, 5),
      showgrid = FALSE
    ),
    yaxis = list(
      title = "Antal",
      showgrid = FALSE
    ),
    legend = list(
      orientation = "h",
      x = 0.5,
      xanchor = "center",
      y = -0.2,
      title = list(text = "")
    ),
    showlegend = TRUE,
    plot_bgcolor = 'rgba(0,0,0,0)',
    paper_bgcolor = 'rgba(0,0,0,0)'
  )
```

```{r}
# Kommuner skilsmisse
kommuner_skils <- readRDS("01_data_cleaning/03_output/kommuner_skils.rds")

skils_map <- st_transform(kommuner_skils, crs = '+proj=longlat +datum=WGS84')

skils_map <- st_simplify(skils_map, dTolerance = 75)

skils_map <- skils_map |> 
  mutate(label_skils_kvinde = paste0(navn, ": ", round(mean_skilsmisse_alder_Kvinde)),
         label_skils_mand = paste0(navn, ": ", round(mean_skilsmisse_alder_Mand)),
         label_average_marriage_length = paste0(navn, ": ", round(mean_marriage_varighed_Mand)))


pal_mand_val <- colorNumeric(
  palette = c("#a6a7a5", "#90918f", "#737472", "#818280", "#565755","#484847"),
  domain = skils_map$mean_skilsmisse_alder_Mand)

# pal_borg_andel <- colorNumeric(
#   palette = c("#a6a7a5", "#90918f", "#737472", "#818280", "#565755","#484847"),
#   domain = data_map$andel_borgerlig)

pal_kvinde_val <- colorNumeric(
  palette = c("#ef9793", "#eb7974", "#e96b65", "#d1605a", "#ba5550", "#a34a46"),
  domain = skils_map$mean_skilsmisse_alder_Kvinde)

# pal_kirk_andel <- colorNumeric(
#   palette = c("#f39539", "#f28820", "#f17b08", "#d86e07", "#c06206", "#a85605"),
#   domain = data_map$andel_kirkelig)

pal_mar_length<- colorNumeric(
  palette = c("#f39539", "#f28820", "#f17b08", "#d86e07", "#c06206", "#a85605"),
  domain = skils_map$mean_marriage_varighed_Mand)


# Right now colors are not rendering correctly
map_skils <- leaflet(skils_map) |>
  #addTiles() |>
  addProviderTiles("CartoDB.Positron") |>
  addPolygons(data = skils_map,
              fillOpacity = 1,
              fillColor = ~pal_mar_length(mean_marriage_varighed_Mand),
              weight = 1,
              color = "gray",
              dashArray = "3",
              label = ~label_average_marriage_length,
              labelOptions = labelOptions(
                textsize = "15px",
                direction = "auto"),
              group = "Gns. Ægteskabsvarighed (År)",
              highlightOptions = highlightOptions(
                weight = 4,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) |>
  addPolygons(data = skils_map,
              fillOpacity = 1,
              fillColor = ~pal_mand_val(mean_skilsmisse_alder_Mand),
              weight = 1,
              color = "gray",
              dashArray = "3",
              label = ~label_skils_mand,
              labelOptions = labelOptions(
                textsize = "15px",
                direction = "auto"),
              group = "Skilsmisse Gennemsnitsalder (Mand)",
              highlightOptions = highlightOptions(
                weight = 4,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) |>
  addPolygons(data = skils_map,
              fillOpacity = 1,
              fillColor = ~pal_kvinde_val(mean_skilsmisse_alder_Kvinde),
              weight = 1,
              color = "gray",
              dashArray = "3",
              label = ~label_skils_kvinde,
              labelOptions = labelOptions(
                textsize = "15px",
                direction = "auto"),
              group = "Skilsmisse Gennemsnitsalder (Kvinde)",
              highlightOptions = highlightOptions(
                weight = 4,
                color = "#666",
                dashArray = "",
                fillOpacity = 0.7,
                bringToFront = TRUE)) |>
  addLayersControl(
    baseGroups=c("Gns. Ægteskabsvarighed (År)",
                 "Skilsmisse Gennemsnitsalder (Mand)",
                 "Skilsmisse Gennemsnitsalder (Kvinde)"
                 ),
    position = "bottomleft",
    options = layersControlOptions(collapsed = FALSE)
  )

```

```{r}
skilsmisse_total <- readRDS("01_data_cleaning/03_output/skilsmisse_alder_varighed.rds")

```

```{r}
# Plot
skilsmisse_total <- skilsmisse_total |> 
  group_by(year, gender) |> 
  summarise(mean_skilsmisse_alder = mean(mean_skilsmisse_alder, na.rm = TRUE),
            mean_marriage_varighed = mean(mean_marriage_varighed, na.rm = TRUE)) |> 
  ungroup()

# skils_plot <- skilsmisse_total |> 
#   ungroup() |> 
#   ggplot(aes(x=year, y = mean_skilsmisse_alder, group = gender, color= gender)) + 
#   geom_line() + 
#   geom_point() +
#   scale_color_manual(values = c("#eb7974", "#90918F")) +
#   scale_x_continuous(breaks=seq(2006, 2023, 5)) +
#   xlab("") + 
#   ylab("Alder") +
#   theme_classic() +
#   theme(legend.position = "bottom",
#         legend.title = element_blank()) 


skils_plot <- plot_ly(data = skilsmisse_total, 
                    x = ~year, 
                    y = ~round(mean_skilsmisse_alder, 1), 
                    type = 'scatter', 
                    mode = 'lines+markers',
                    color = ~gender, 
                    colors = c("#eb7974", "#90918F")) |> 
  layout(
    xaxis = list(
      title = "",
      tickvals = seq(2006, 2023, 5),
      showgrid = FALSE
    ),
    yaxis = list(
      title = "Alder",
      showgrid = FALSE
    ),
    legend = list(
      orientation = "h",
      x = 0.5,
      xanchor = "center",
      y = -0.2,
      title = list(text = "")
    ),
    showlegend = TRUE,
    plot_bgcolor = 'rgba(0,0,0,0)',
    paper_bgcolor = 'rgba(0,0,0,0)'
  )

```

```{r}

```

# Total

## Column

### Row {height="30%"}

```{r}
#| component: valuebox
#| title: "Årlige Vielser"
list(
  icon = "calendar2-heart-fill",
  color = "primary",
  value = mean_vielser
)

```

```{r}
#| component: valuebox
#| title: "Årlige Skilsmisser"
list(
  icon = "arrows-angle-expand",
  color = "secondary",
  value = mean_skils
)
```

### Row {.tabset}

```{r}
#| title: "Vielser og Skilsmisser (1983-2023)"
vielser_skils_over_tid
```

```{r, warning=FALSE}
#| title: "År Til År Forskel"
forskel_over_tid
```

## Column

### Row

```{r}
#| title: "Borgerlige og Kirkelige Vielser (2023)"
map
```

# Vielser

## Column

### Row

```{r}
#| title: "Gennemsnitsalder For Vigelse"
age_viede_plot
```

### Row {height="30%"}

```{r}
knitr::kable(age_key_measures)
```

## Column

### Row {.tabset}

```{r}
#| title: "Gennemsnit Vielser Per Måned"
month_plot
```

```{r}
#| title: "Total Vielser Per Måned Per År"
year_month 
```

```{r}
#| title: "Mest Populære Datoer"
most_pop_day_month
```

```{r}
#| title: "Mindst Populære Datoer"
least_pop_day_month
```

### Row {height=30%}

```{r}
#| title: "Udvikling I Vielser Mellem to af Samme Køn"
vielsestype_plot
```

# Skilsmisser

## Column

### Row

```{r}
#| title: "Ægteskabsvarighed og Gennemsnitsalder for Skilsmisse (2023)"
map_skils
```

## Column

### Row {height="10%"}

**Udviklingen i gennemsnitsskilsmissealder er ens for mænd og kvinder** 

Forskellen i mænd og kvinders alder når de bliver skilt er i gennemsnit 3 år

### Row

```{r}
#| title: "Udvikling I Gennemsnitlig Skilsmissealder"
skils_plot
```


# About

## Row {.flow}

::: card
::: card-header
About
:::

::: card-body
Det her dashboard viser data om vielser og skilsmisser i Danmark og er bygget med [Quarto](https://quarto.org/docs/dashboards/). Dataet som er blevet brugt består af tabellerne BEV3C, BEFOLK1, FOLK1A, VIE1, VIEDAG, VIE7, VIE307 og SKI107 fra Danmarks Statistik  [Statistikbanken](https://www.statistikbanken.dk/statbank5a/default.asp?w=1920).


Sorce koden for det her dashboard kan findes på min github:

[<i class="bi bi-file-code"></i> Repository](https://github.com/Andy-jorg/vielser-skilsmisser2DR)
:::
:::
